'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var _extends = _interopDefault(require('babel-runtime/helpers/extends'));
var _Object$getPrototypeOf = _interopDefault(require('babel-runtime/core-js/object/get-prototype-of'));
var _classCallCheck = _interopDefault(require('babel-runtime/helpers/classCallCheck'));
var _createClass = _interopDefault(require('babel-runtime/helpers/createClass'));
var _possibleConstructorReturn = _interopDefault(require('babel-runtime/helpers/possibleConstructorReturn'));
var _inherits = _interopDefault(require('babel-runtime/helpers/inherits'));
var _typeof = _interopDefault(require('babel-runtime/helpers/typeof'));
var _objectWithoutProperties = _interopDefault(require('babel-runtime/helpers/objectWithoutProperties'));
var React = require('react');
var React__default = _interopDefault(React);
var propTypes = _interopDefault(require('prop-types'));
var invariant = _interopDefault(require('invariant'));

var MOUSEDOWN = 'mousedown';

function withClickOutside(_ref) {
    var containerProps = _objectWithoutProperties(_ref, []);

    return function ClickOutsideHOC(WrappedComponent) {
        var _class, _temp2;

        invariant(typeof WrappedComponent === 'function', 'Expected "WrappedComponent" provided as the first argument to ClickOutsideHOC\n            to be a function. Instead, received ' + (typeof WrappedComponent === 'undefined' ? 'undefined' : _typeof(WrappedComponent)) + '.');

        function getDisplayName() {
            return WrappedComponent.displayName || WrappedComponent.name || 'Component';
        }

        return _temp2 = _class = function (_Component) {
            _inherits(ClickOutside, _Component);

            function ClickOutside() {
                var _ref2;

                var _temp, _this, _ret;

                _classCallCheck(this, ClickOutside);

                for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
                    args[_key] = arguments[_key];
                }

                return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref2 = ClickOutside.__proto__ || _Object$getPrototypeOf(ClickOutside)).call.apply(_ref2, [this].concat(args))), _this), _this.onClickOutside = function (_ref3) {
                    var target = _ref3.target;
                    var _this2 = _this,
                        containerNode = _this2.containerNode,
                        hasClickedOutside = _this2.hasClickedOutside;


                    if (containerNode && hasClickedOutside(containerNode, target)) {
                        _this.props.onClickOutside();
                    }
                }, _this.containerRef = function (node) {
                    _this.containerNode = node;
                }, _temp), _possibleConstructorReturn(_this, _ret);
            }

            _createClass(ClickOutside, [{
                key: 'componentDidMount',
                value: function componentDidMount() {
                    global.addEventListener(MOUSEDOWN, this.onClickOutside);
                }
            }, {
                key: 'componentWillUnmount',
                value: function componentWillUnmount() {
                    global.removeEventListener(MOUSEDOWN, this.onClickOutside);
                }
            }, {
                key: 'hasClickedOutside',
                value: function hasClickedOutside(containerNode, targetNode) {
                    return !containerNode.contains(targetNode);
                }
            }, {
                key: 'render',
                value: function render() {
                    var _props = this.props,
                        onClickOutside = _props.onClickOutside,
                        rest = _objectWithoutProperties(_props, ['onClickOutside']);

                    return React__default.createElement(
                        'div',
                        _extends({ ref: this.containerRef }, containerProps),
                        React__default.createElement(WrappedComponent, rest)
                    );
                }
            }]);

            return ClickOutside;
        }(React.Component), _class.displayName = 'withClickOutsideHOC(' + getDisplayName() + ')', _temp2;
    };
}

var ClickOutside = function (_Component) {
    _inherits(ClickOutside, _Component);

    function ClickOutside() {
        var _ref;

        var _temp, _this, _ret;

        _classCallCheck(this, ClickOutside);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = ClickOutside.__proto__ || _Object$getPrototypeOf(ClickOutside)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
            hasClickedOutside: false
        }, _this.onClickOutside = function (_ref2) {
            var target = _ref2.target;
            var _this2 = _this,
                containerNode = _this2.containerNode,
                hasClickedOutside = _this2.hasClickedOutside;


            _this.updateState({
                hasClickedOutside: hasClickedOutside(containerNode, target)
            });
        }, _this.containerRef = function (node) {
            _this.containerNode = node;
        }, _temp), _possibleConstructorReturn(_this, _ret);
    }

    _createClass(ClickOutside, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            global.addEventListener(MOUSEDOWN, this.onClickOutside);
        }
    }, {
        key: 'componentWillUnmount',
        value: function componentWillUnmount() {
            global.removeEventListener(MOUSEDOWN, this.onClickOutside);
        }
    }, {
        key: 'updateState',
        value: function updateState() {
            var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

            this.setState(function (prevState) {
                return _extends({}, prevState, state);
            });
        }
    }, {
        key: 'hasClickedOutside',
        value: function hasClickedOutside(containerNode, targetNode) {
            return containerNode && !containerNode.contains(targetNode);
        }
    }, {
        key: 'render',
        value: function render() {
            var _props = this.props,
                children = _props.children,
                rest = _objectWithoutProperties(_props, ['children']);

            var hasClickedOutside = this.state.hasClickedOutside;


            return React__default.createElement(
                'div',
                _extends({ ref: this.containerRef }, rest),
                children({ hasClickedOutside: hasClickedOutside })
            );
        }
    }]);

    return ClickOutside;
}(React.Component);

exports.withClickOutside = withClickOutside;
exports.ClickOutside = ClickOutside;
//# sourceMappingURL=index.cjs.js.map
