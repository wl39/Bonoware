{"version":3,"file":"index.esm.js","sources":["../src/events.js","../src/with-click-outside.js","../src/click-outside.js"],"sourcesContent":["const MOUSEDOWN = 'mousedown';\n\nexport default MOUSEDOWN;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport invariant from 'invariant';\nimport EVENT from './events';\n\nexport default function withClickOutside({ ...containerProps }) {\n    return function ClickOutsideHOC(WrappedComponent) {\n        invariant(\n            typeof WrappedComponent === 'function',\n            `Expected \"WrappedComponent\" provided as the first argument to ClickOutsideHOC\n            to be a function. Instead, received ${typeof WrappedComponent}.`,\n        );\n\n        function getDisplayName() {\n            return WrappedComponent.displayName || WrappedComponent.name || 'Component';\n        }\n\n        return class ClickOutside extends Component {\n            static displayName = `withClickOutsideHOC(${getDisplayName()})`;\n\n            static propTypes = {\n                onClickOutside: PropTypes.func.isRequired,\n            }\n\n            componentDidMount() {\n                global.addEventListener(EVENT, this.onClickOutside);\n            }\n\n            componentWillUnmount() {\n                global.removeEventListener(EVENT, this.onClickOutside);\n            }\n\n            onClickOutside = ({ target }) => {\n                const { containerNode, hasClickedOutside } = this;\n\n                if (containerNode && hasClickedOutside(containerNode, target)) {\n                    this.props.onClickOutside();\n                }\n            }\n\n            hasClickedOutside(containerNode, targetNode) {\n                return !containerNode.contains(targetNode);\n            }\n\n            containerRef = (node) => {\n                this.containerNode = node;\n            }\n\n            render() {\n                const { onClickOutside, ...rest } = this.props;\n\n                return (\n                    <div ref={this.containerRef} {...containerProps}>\n                        <WrappedComponent {...rest} />\n                    </div>\n                );\n            }\n        };\n    };\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport EVENT from './events';\n\nexport default class ClickOutside extends Component {\n    static propTypes = {\n        children: PropTypes.func.isRequired,\n    }\n\n    state = {\n        hasClickedOutside: false,\n    }\n\n    componentDidMount() {\n        global.addEventListener(EVENT, this.onClickOutside);\n    }\n\n    componentWillUnmount() {\n        global.removeEventListener(EVENT, this.onClickOutside);\n    }\n\n    onClickOutside = ({ target }) => {\n        const { containerNode, hasClickedOutside } = this;\n\n        this.updateState({\n            hasClickedOutside: hasClickedOutside(containerNode, target),\n        });\n    }\n\n    updateState(state = {}) {\n        this.setState((prevState) => ({\n            ...prevState,\n            ...state,\n        }));\n    }\n\n    hasClickedOutside(containerNode, targetNode) {\n        return containerNode && !containerNode.contains(targetNode);\n    }\n\n    containerRef = (node) => {\n        this.containerNode = node;\n    }\n\n    render() {\n        const { children, ...rest } = this.props;\n        const { hasClickedOutside } = this.state;\n\n        return (\n            <div ref={this.containerRef} {...rest}>\n                {children({ hasClickedOutside })}\n            </div>\n        );\n    }\n}\n"],"names":["MOUSEDOWN","withClickOutside","containerProps","ClickOutsideHOC","WrappedComponent","getDisplayName","displayName","name","onClickOutside","target","containerNode","hasClickedOutside","props","containerRef","node","addEventListener","EVENT","removeEventListener","targetNode","contains","rest","Component","ClickOutside","state","updateState","setState","prevState","children"],"mappings":";;;;;;;;;;;;AAAA,IAAMA,YAAY,WAAlB;;ACKe,SAASC,gBAAT,OAAiD;QAAlBC,cAAkB;;WACrD,SAASC,eAAT,CAAyBC,gBAAzB,EAA2C;;;kBAE1C,OAAOA,gBAAP,KAA4B,UADhC,8IAGiDA,gBAHjD,yCAGiDA,gBAHjD;;iBAMSC,cAAT,GAA0B;mBACfD,iBAAiBE,WAAjB,IAAgCF,iBAAiBG,IAAjD,IAAyD,WAAhE;;;;;;;;;;;;;;;;;iNAkBAC,cAfJ,GAeqB,iBAAgB;wBAAbC,MAAa,SAAbA,MAAa;;wBACrBC,aADqB,UACrBA,aADqB;wBACNC,iBADM,UACNA,iBADM;;;wBAGzBD,iBAAiBC,kBAAkBD,aAAlB,EAAiCD,MAAjC,CAArB,EAA+D;8BACtDG,KAAL,CAAWJ,cAAX;;iBAnBZ,QA2BIK,YA3BJ,GA2BmB,UAACC,IAAD,EAAU;0BAChBJ,aAAL,GAAqBI,IAArB;iBA5BR;;;;;oDAOwB;2BACTC,gBAAP,CAAwBC,SAAxB,EAA+B,KAAKR,cAApC;;;;uDAGmB;2BACZS,mBAAP,CAA2BD,SAA3B,EAAkC,KAAKR,cAAvC;;;;kDAWcE,aAvBtB,EAuBqCQ,UAvBrC,EAuBiD;2BAClC,CAACR,cAAcS,QAAd,CAAuBD,UAAvB,CAAR;;;;yCAOK;iCAC+B,KAAKN,KADpC;wBACGJ,cADH,UACGA,cADH;wBACsBY,IADtB;;2BAID;;mCAAK,KAAK,KAAKP,YAAf,IAAiCX,cAAjC;4CACK,gBAAD,EAAsBkB,IAAtB;qBAFR;;;;;UAlC0BC,SAAlC,UACWf,WADX,4BACgDD,gBADhD;KAXJ;;;ICFiBiB;;;;;;;;;;;;;;uMAKjBC,QAAQ;+BACe;iBAWvBf,iBAAiB,iBAAgB;gBAAbC,MAAa,SAAbA,MAAa;;gBACrBC,aADqB,UACrBA,aADqB;gBACNC,iBADM,UACNA,iBADM;;;kBAGxBa,WAAL,CAAiB;mCACMb,kBAAkBD,aAAlB,EAAiCD,MAAjC;aADvB;iBAgBJI,eAAe,UAACC,IAAD,EAAU;kBAChBJ,aAAL,GAAqBI,IAArB;;;;;;4CA5BgB;mBACTC,gBAAP,CAAwBC,SAAxB,EAA+B,KAAKR,cAApC;;;;+CAGmB;mBACZS,mBAAP,CAA2BD,SAA3B,EAAkC,KAAKR,cAAvC;;;;sCAWoB;gBAAZe,KAAY,uEAAJ,EAAI;;iBACfE,QAAL,CAAc,UAACC,SAAD;oCACPA,SADO,EAEPH,KAFO;aAAd;;;;0CAMcb,eAAeQ,YAAY;mBAClCR,iBAAiB,CAACA,cAAcS,QAAd,CAAuBD,UAAvB,CAAzB;;;;iCAOK;yBACyB,KAAKN,KAD9B;gBACGe,QADH,UACGA,QADH;gBACgBP,IADhB;;gBAEGT,iBAFH,GAEyB,KAAKY,KAF9B,CAEGZ,iBAFH;;;mBAKD;;2BAAK,KAAK,KAAKE,YAAf,IAAiCO,IAAjC;yBACc,EAAET,oCAAF,EAAT;aAFT;;;;;EA5CkCU;;;;"}